---
# tasks file for app
- name: crear namespace
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: apache
        labels:
          app: apache
  tags: app

- name: crear volumen persistente
  k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: nfs-pv
        namespace: apache
      spec:
        capacity:
          storage: 10Gi
        volumeMode: Filesystem
        accessModes:
          - ReadWriteMany
        persistentVolumeReclaimPolicy: Recycle
        storageClassName: nfs
        mountOptions:
          - hard
          - nfsvers=4.1
        nfs:
          path: /mnt/nfs
          server: vm-nfs
  tags: app

- name: crear volumen persistente claim
  k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: nfs-pvc
        namespace: apache
      spec:
        storageClassName: nfs
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 2Gi
  tags: app

- name: crear pod
  k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: apache-deployment
        namespace: apache
        labels:
          app: apache
      spec:
        selector:
          matchLabels:
            app: apache
        replicas: 1
        template:
          metadata:
            labels:
              app: apache
          spec:
            containers:
            - name: apache
              image: quay.io/startx/apache
              ports:
              - containerPort: 80
              volumeMounts:
              - name: volumen-nfs 
                mountPath: /mnt/nfs
            volumes:
            - name: volumen-nfs
              persistentVolumeClaim:
                claimName: nfs-pvc
  tags: app

- name: create service
  k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: apache-service
        namespace: apache
      spec:
        selector:
          app: apache
        ports:
          - name: http
            protocol: TCP
            port: 9090
            targetPort: 8080
        type: NodePort
  tags: app

- name: create ingress
  k8s:
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: apache-ingress
        namespace: apache
        labels:
          app: apache
        annotations:
          haproxy.org/path-rewrite: "/"
          kubernetes.io/ingress.class: haproxy
      spec:
        rules:
        - http:
            paths:
            - path: /volumes
              pathType: Prefix
              backend:
                service:
                  name: apache-service
                  port:
                    number: 9090
  tags: app

- name: create configmap
  k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: haproxy-configmap
        namespace: apache
      data:
        scale-server-slots: "42"
        ssl-redirect: "OFF"
  tags: app